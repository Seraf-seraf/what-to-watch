openapi: 3.0.3
info:
  title: 'What to watch REST API'
  description: "Данный проект представляет собой REST API для управления базой данных фильмов,\n                        включая функции оставления комментариев, регистрации пользователей и управления\n                        списком избранных фильмов. Сервис интегрируется с КиноПоиском, что позволяет\n                        получать комментарии к фильмам и предоставляет пользователям возможность активно взаимодействовать с ними."
  version: 1.0.0
servers:
  -
    url: 'https://localhost'
paths:
  /api/v1/register:
    post:
      summary: ''
      operationId: postApiV1Register
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'User One'
                    email: user1@example.com
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'User One'
                      email:
                        type: string
                        example: user1@example.com
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет активной сессии'
                properties:
                  error:
                    type: string
                    example: 'Нет активной сессии'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Переданные данные не корректны'
                  errors:
                    email:
                      - 'Поле email должно быть уникальным'
                properties:
                  message:
                    type: string
                    example: 'Переданные данные не корректны'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'Поле email должно быть уникальным'
                        items:
                          type: string
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Поле value не может превышать 255 символов.'
                  example: fyeyuijb
                email:
                  type: string
                  description: 'Поле value должно быть действительным адресом электронной почты. Поле value не может превышать 255 символов.'
                  example: kovacek.shakira@example.com
                password:
                  type: string
                  description: 'Поле value должно быть длиной минимум 8 символов.'
                  example: '#vh#ih/o%7&bw'
                file:
                  type: string
                  format: binary
                  description: 'Поле value поддерживает только изображения Поле value не может превышать 10240 килобайт.'
              required:
                - name
                - email
                - password
      security: []
  /api/v1/logout:
    post:
      summary: ''
      operationId: postApiV1Logout
      description: ''
      parameters: []
      responses:
        204:
          description: ''
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет активной сессии'
                properties:
                  error:
                    type: string
                    example: 'Нет активной сессии'
      tags:
        - Authentication
  /api/v1/login:
    post:
      summary: ''
      operationId: postApiV1Login
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      error: 'Нет активной сессии'
                    properties:
                      error:
                        type: string
                        example: 'Нет активной сессии'
                  -
                    description: ''
                    type: object
                    example:
                      error: 'Неверный email или пароль'
                    properties:
                      error:
                        type: string
                        example: 'Неверный email или пароль'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Поле value должно быть действительным адресом электронной почты.'
                  example: cleo67@example.com
                password:
                  type: string
                  description: ''
                  example: '2z%5]CtbWD8Rz'
              required:
                - email
                - password
      security: []
  '/api/v1/films/{film_id}/comments':
    get:
      summary: ''
      operationId: getApiV1FilmsFilm_idComments
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 19
                      text: texttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttext
                      rating: 10
                      created_at: '2024-09-25 22:06:36'
                      answers:
                        -
                          id: 20
                          text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN
                          created_at: '2024-09-25 22:10:44'
                          answers:
                            -
                              id: 21
                              text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN
                              created_at: '2024-09-25 22:11:00'
                              answers:
                                -
                                  id: 22
                                  text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN
                                  created_at: '2024-09-25 22:11:49'
                                  answers:
                                    -
                                      id: 23
                                      text: rerewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwe
                                      rating: 1
                                      created_at: '2024-09-25 22:11:58'
                                      answers: [{ id: 24, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:12:04', answers: [] }, { id: 25, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:27:45', answers: [{ id: 26, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:28:16', answers: [{ id: 27, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:28:22', answers: [] }, { id: 28, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:39:06', answers: [] }, { id: 29, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:41:53', answers: [] }, { id: 30, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:42:28', answers: [] }] }] }]
                    -
                      id: 19
                      text: texttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttext
                      rating: 10
                      created_at: '2024-09-25 22:06:36'
                      answers:
                        -
                          id: 20
                          text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN
                          created_at: '2024-09-25 22:10:44'
                          answers:
                            -
                              id: 21
                              text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN
                              created_at: '2024-09-25 22:11:00'
                              answers:
                                -
                                  id: 22
                                  text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN
                                  created_at: '2024-09-25 22:11:49'
                                  answers:
                                    -
                                      id: 23
                                      text: rerewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwe
                                      rating: 1
                                      created_at: '2024-09-25 22:11:58'
                                      answers: [{ id: 24, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:12:04', answers: [] }, { id: 25, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:27:45', answers: [{ id: 26, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:28:16', answers: [{ id: 27, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:28:22', answers: [] }, { id: 28, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:39:06', answers: [] }, { id: 29, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:41:53', answers: [] }, { id: 30, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:42:28', answers: [] }] }] }]
                  links:
                    first: '/?page=1'
                    last: '/?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: pagination.previous
                        active: false
                      -
                        url: '/?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: pagination.next
                        active: false
                    path: /
                    per_page: 10
                    to: 2
                    total: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 19
                        text: texttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttext
                        rating: 10
                        created_at: '2024-09-25 22:06:36'
                        answers:
                          -
                            id: 20
                            text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN
                            created_at: '2024-09-25 22:10:44'
                            answers:
                              -
                                id: 21
                                text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN
                                created_at: '2024-09-25 22:11:00'
                                answers:
                                  -
                                    id: 22
                                    text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN
                                    created_at: '2024-09-25 22:11:49'
                                    answers:
                                      - { id: 23, text: rerewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwe, rating: 1, created_at: '2024-09-25 22:11:58', answers: [{ id: 24, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:12:04', answers: [] }, { id: 25, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:27:45', answers: [{ id: 26, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:28:16', answers: [{ id: 27, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:28:22', answers: [] }, { id: 28, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:39:06', answers: [] }, { id: 29, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:41:53', answers: [] }, { id: 30, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:42:28', answers: [] }] }] }] }
                      -
                        id: 19
                        text: texttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttext
                        rating: 10
                        created_at: '2024-09-25 22:06:36'
                        answers:
                          -
                            id: 20
                            text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN
                            created_at: '2024-09-25 22:10:44'
                            answers:
                              -
                                id: 21
                                text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN
                                created_at: '2024-09-25 22:11:00'
                                answers:
                                  -
                                    id: 22
                                    text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN
                                    created_at: '2024-09-25 22:11:49'
                                    answers:
                                      - { id: 23, text: rerewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwe, rating: 1, created_at: '2024-09-25 22:11:58', answers: [{ id: 24, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:12:04', answers: [] }, { id: 25, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:27:45', answers: [{ id: 26, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:28:16', answers: [{ id: 27, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:28:22', answers: [] }, { id: 28, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:39:06', answers: [] }, { id: 29, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:41:53', answers: [] }, { id: 30, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:42:28', answers: [] }] }] }] }
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 19
                        text:
                          type: string
                          example: texttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttext
                        rating:
                          type: integer
                          example: 10
                        created_at:
                          type: string
                          example: '2024-09-25 22:06:36'
                        answers:
                          type: array
                          example:
                            -
                              id: 20
                              text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN
                              created_at: '2024-09-25 22:10:44'
                              answers:
                                -
                                  id: 21
                                  text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN
                                  created_at: '2024-09-25 22:11:00'
                                  answers:
                                    -
                                      id: 22
                                      text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN
                                      created_at: '2024-09-25 22:11:49'
                                      answers: [{ id: 23, text: rerewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwe, rating: 1, created_at: '2024-09-25 22:11:58', answers: [{ id: 24, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:12:04', answers: [] }, { id: 25, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:27:45', answers: [{ id: 26, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:28:16', answers: [{ id: 27, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:28:22', answers: [] }, { id: 28, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:39:06', answers: [] }, { id: 29, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:41:53', answers: [] }, { id: 30, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:42:28', answers: [] }] }] }] }]
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 20
                              text:
                                type: string
                                example: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN
                              created_at:
                                type: string
                                example: '2024-09-25 22:10:44'
                              answers:
                                type: array
                                example:
                                  -
                                    id: 21
                                    text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN
                                    created_at: '2024-09-25 22:11:00'
                                    answers:
                                      - { id: 22, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:11:49', answers: [{ id: 23, text: rerewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwe, rating: 1, created_at: '2024-09-25 22:11:58', answers: [{ id: 24, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:12:04', answers: [] }, { id: 25, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:27:45', answers: [{ id: 26, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:28:16', answers: [{ id: 27, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:28:22', answers: [] }, { id: 28, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:39:06', answers: [] }, { id: 29, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:41:53', answers: [] }, { id: 30, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:42:28', answers: [] }] }] }] }] }
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      example: 21
                                    text:
                                      type: string
                                      example: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN
                                    created_at:
                                      type: string
                                      example: '2024-09-25 22:11:00'
                                    answers:
                                      type: array
                                      example: [{ id: 22, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:11:49', answers: [{ id: 23, text: rerewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwe, rating: 1, created_at: '2024-09-25 22:11:58', answers: [{ id: 24, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:12:04', answers: [] }, { id: 25, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:27:45', answers: [{ id: 26, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:28:16', answers: [{ id: 27, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:28:22', answers: [] }, { id: 28, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:39:06', answers: [] }, { id: 29, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:41:53', answers: [] }, { id: 30, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:42:28', answers: [] }] }] }] }] }]
                                      items: { type: object, properties: { id: { type: integer, example: 22 }, text: { type: string, example: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN }, created_at: { type: string, example: '2024-09-25 22:11:49' }, answers: { type: array, example: [{ id: 23, text: rerewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwe, rating: 1, created_at: '2024-09-25 22:11:58', answers: [{ id: 24, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:12:04', answers: [] }, { id: 25, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:27:45', answers: [{ id: 26, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:28:16', answers: [{ id: 27, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:28:22', answers: [] }, { id: 28, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:39:06', answers: [] }, { id: 29, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:41:53', answers: [] }, { id: 30, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:42:28', answers: [] }] }] }] }], items: { type: object, properties: { id: { type: integer, example: 23 }, text: { type: string, example: rerewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwererewrerewwe }, rating: { type: integer, example: 1 }, created_at: { type: string, example: '2024-09-25 22:11:58' }, answers: { type: array, example: [{ id: 24, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:12:04', answers: [] }, { id: 25, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:27:45', answers: [{ id: 26, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:28:16', answers: [{ id: 27, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:28:22', answers: [] }, { id: 28, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:39:06', answers: [] }, { id: 29, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:41:53', answers: [] }, { id: 30, text: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN, created_at: '2024-09-25 22:42:28', answers: [] }] }] }], items: { type: object, properties: { id: { type: integer, example: 24 }, text: { type: string, example: JDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTNJDNTN }, created_at: { type: string, example: '2024-09-25 22:12:04' }, answers: { type: array, example: [] } } } } } } } } }
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: '/?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: pagination.previous
                            active: false
                          -
                            url: '/?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: pagination.next
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: pagination.previous
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 10
                      to:
                        type: integer
                        example: 2
                      total:
                        type: integer
                        example: 2
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Запрашиваемая страница не существует'
                properties:
                  error:
                    type: string
                    example: 'Запрашиваемая страница не существует'
      tags:
        - Comment
      security: []
    post:
      summary: ''
      operationId: postApiV1FilmsFilm_idComments
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 19
                    text: texttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttext
                    rating: 10
                    created_at: '2024-09-25 22:06:36'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 19
                      text:
                        type: string
                        example: texttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttext
                      rating:
                        type: integer
                        example: 10
                      created_at:
                        type: string
                        example: '2024-09-25 22:06:36'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет активной сессии'
                properties:
                  error:
                    type: string
                    example: 'Нет активной сессии'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Запрашиваемая страница не существует'
                properties:
                  error:
                    type: string
                    example: 'Запрашиваемая страница не существует'
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                film_id:
                  type: string
                  description: ''
                  example: null
                rating:
                  type: integer
                  description: "Рейтинг, который выставляется в комментарии,\n        указать можно только в отзыве,\n        в ответах рейтинг указать нельзя. От 1 до 10."
                  example: 65
                text:
                  type: string
                  description: 'Поле value должно быть длиной минимум 50 символов.'
                  example: jhiafqqvwmvkuazuuchocyegwbwrsuwejarwmaaceworedhdpmhckxubiedtwjmapfxfarimzybozqx
                parent_id:
                  type: integer
                  description: 'Указывается, когда добавляется ответ к комментарию, в ответах нельзя указать рейтинг'
                  example: 19
              required:
                - rating
                - text
                - parent_id
    parameters:
      -
        in: path
        name: film_id
        description: 'ID фильма'
        example: 65
        required: true
        schema:
          type: integer
  '/api/v1/comments/{id}':
    patch:
      summary: ''
      operationId: patchApiV1CommentsId
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 19
                    text: texttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttext
                    rating: 10
                    created_at: '2024-09-25 22:06:36'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 19
                      text:
                        type: string
                        example: texttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttext
                      rating:
                        type: integer
                        example: 10
                      created_at:
                        type: string
                        example: '2024-09-25 22:06:36'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет активной сессии'
                properties:
                  error:
                    type: string
                    example: 'Нет активной сессии'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет доступа к дейсвтию!'
                properties:
                  error:
                    type: string
                    example: 'Нет доступа к дейсвтию!'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Запрашиваемая страница не существует'
                properties:
                  error:
                    type: string
                    example: 'Запрашиваемая страница не существует'
      tags:
        - Comment
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                film_id:
                  type: string
                  description: ''
                  example: null
                rating:
                  type: integer
                  description: 'This field is required when <code>comment_id</code> is <code>null</code>. Минимальное значение у поля value 1 Максимальное значение у поля value 10.'
                  example: 8
                text:
                  type: string
                  description: 'Поле value должно быть длиной минимум 50 символов.'
                  example: ejuwdvamsymueyjrgiynzubamjtylzvzoujskncepyshzygqzuepyfrmijsvol
                parent_id:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: 19
        required: true
        schema:
          type: integer
      -
        in: path
        name: comment_id
        description: 'ID комментария'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/comments/{comment_id}':
    delete:
      summary: 'DELETE api/v1/comments/{comment_id}'
      operationId: dELETEApiv1commentscommentId
      description: "Пользователь может удалить свой комментарий, на который нет ответов.\n         Администратор может удалить любой комментарий, у которого нет ответов"
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет активной сессии'
                properties:
                  error:
                    type: string
                    example: 'Нет активной сессии'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет доступа к дейсвтию!'
                properties:
                  error:
                    type: string
                    example: 'Нет доступа к дейсвтию!'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Запрашиваемая страница не существует'
                properties:
                  error:
                    type: string
                    example: 'Запрашиваемая страница не существует'
      tags:
        - Comment
    parameters:
      -
        in: path
        name: comment_id
        description: 'ID комментария'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/favorite:
    get:
      summary: 'GET /api/v1/favorite'
      operationId: gETapiv1favorite
      description: 'Получение списка фильмов, добавленных в список избранных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      -
                        id: 65
                        name: 'Example Movie 1'
                        posterImage: 'https://example.com/poster1.jpg'
                        previewImage: 'https://example.com/preview1.jpg'
                        backgroundImage: 'https://example.com/background1.jpg'
                        backgroundColor: '#FFFFFF'
                        videoLink: 'https://example.com/video1.mp4'
                        previewVideoLink: 'https://example.com/previewVideo1.mp4'
                        description: 'A great movie about...'
                        rating: '5.50'
                        scoresCount: 2
                        director: 'Director 1'
                        starring:
                          - 'Actor 1'
                          - 'Actor 2'
                        runTime: 120
                        genre:
                          - action
                        released: '2021'
                        status: ready
                        is_favorite: false
                    -
                      -
                        id: 65
                        name: 'Example Movie 1'
                        posterImage: 'https://example.com/poster1.jpg'
                        previewImage: 'https://example.com/preview1.jpg'
                        backgroundImage: 'https://example.com/background1.jpg'
                        backgroundColor: '#FFFFFF'
                        videoLink: 'https://example.com/video1.mp4'
                        previewVideoLink: 'https://example.com/previewVideo1.mp4'
                        description: 'A great movie about...'
                        rating: '5.50'
                        scoresCount: 2
                        director: 'Director 1'
                        starring:
                          - 'Actor 1'
                          - 'Actor 2'
                        runTime: 120
                        genre:
                          - action
                        released: '2021'
                        status: ready
                        is_favorite: false
                  links:
                    first: '/?page=1'
                    last: '/?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: pagination.previous
                        active: false
                      -
                        url: '/?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: pagination.next
                        active: false
                    path: /
                    per_page: 8
                    to: 2
                    total: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        -
                          id: 65
                          name: 'Example Movie 1'
                          posterImage: 'https://example.com/poster1.jpg'
                          previewImage: 'https://example.com/preview1.jpg'
                          backgroundImage: 'https://example.com/background1.jpg'
                          backgroundColor: '#FFFFFF'
                          videoLink: 'https://example.com/video1.mp4'
                          previewVideoLink: 'https://example.com/previewVideo1.mp4'
                          description: 'A great movie about...'
                          rating: '5.50'
                          scoresCount: 2
                          director: 'Director 1'
                          starring:
                            - 'Actor 1'
                            - 'Actor 2'
                          runTime: 120
                          genre:
                            - action
                          released: '2021'
                          status: ready
                          is_favorite: false
                      -
                        -
                          id: 65
                          name: 'Example Movie 1'
                          posterImage: 'https://example.com/poster1.jpg'
                          previewImage: 'https://example.com/preview1.jpg'
                          backgroundImage: 'https://example.com/background1.jpg'
                          backgroundColor: '#FFFFFF'
                          videoLink: 'https://example.com/video1.mp4'
                          previewVideoLink: 'https://example.com/previewVideo1.mp4'
                          description: 'A great movie about...'
                          rating: '5.50'
                          scoresCount: 2
                          director: 'Director 1'
                          starring:
                            - 'Actor 1'
                            - 'Actor 2'
                          runTime: 120
                          genre:
                            - action
                          released: '2021'
                          status: ready
                          is_favorite: false
                    items:
                      type: array
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: '/?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: pagination.previous
                            active: false
                          -
                            url: '/?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: pagination.next
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: pagination.previous
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 8
                      to:
                        type: integer
                        example: 2
                      total:
                        type: integer
                        example: 2
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет активной сессии'
                properties:
                  error:
                    type: string
                    example: 'Нет активной сессии'
      tags:
        - 'Favorite list'
      security: []
  '/api/v1/films/{film_id}/favorite':
    post:
      summary: 'POST /api/v1/favorite/{film_id}'
      operationId: pOSTapiv1favoritefilmId
      description: 'Добавление фильма в список избранных'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет активной сессии'
                properties:
                  error:
                    type: string
                    example: 'Нет активной сессии'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Запрашиваемая страница не существует'
                properties:
                  error:
                    type: string
                    example: 'Запрашиваемая страница не существует'
      tags:
        - 'Favorite list'
    delete:
      summary: 'DELETE /api/v1/favorite/{film_id}'
      operationId: dELETEapiv1favoritefilmId
      description: 'Удаление фильма из списка избранных'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет активной сессии'
                properties:
                  error:
                    type: string
                    example: 'Нет активной сессии'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Запрашиваемая страница не существует'
                properties:
                  error:
                    type: string
                    example: 'Запрашиваемая страница не существует'
      tags:
        - 'Favorite list'
    parameters:
      -
        in: path
        name: film_id
        description: 'ID фильма'
        example: 65
        required: true
        schema:
          type: integer
  /api/v1/films:
    get:
      summary: 'GET api/v1/films'
      operationId: gETApiv1films
      description: 'Список фильмов'
      parameters:
        -
          in: query
          name: status
          description: "Администраторы могут фильтровать фильмы по разным статусам\n        У обычных пользователей этот фильтр не работает"
          example: ready
          required: false
          schema:
            type: string
            description: "Администраторы могут фильтровать фильмы по разным статусам\n        У обычных пользователей этот фильтр не работает"
            example: ready
        -
          in: query
          name: genre
          description: 'Фильтр по жанру фильма'
          example: Шутер
          required: false
          schema:
            type: string
            description: 'Фильтр по жанру фильма'
            example: Шутер
        -
          in: query
          name: orderBy
          description: 'Фильтр по атрибуту. По умолчанию сортируется по released'
          example: released
          required: false
          schema:
            type: string
            description: 'Фильтр по атрибуту. По умолчанию сортируется по released'
            example: released
        -
          in: query
          name: orderTo
          description: 'Направление фильтра по атрибуту'
          example: asc
          required: false
          schema:
            type: string
            description: 'Направление фильтра по атрибуту'
            example: asc
            enum:
              - asc
              - desc
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 65
                      name: 'Example Movie 1'
                      posterImage: 'https://example.com/poster1.jpg'
                      previewImage: 'https://example.com/preview1.jpg'
                      backgroundImage: 'https://example.com/background1.jpg'
                      backgroundColor: '#FFFFFF'
                      videoLink: 'https://example.com/video1.mp4'
                      previewVideoLink: 'https://example.com/previewVideo1.mp4'
                      description: 'A great movie about...'
                      rating: '5.50'
                      scoresCount: 2
                      director: 'Director 1'
                      starring:
                        - 'Actor 1'
                        - 'Actor 2'
                      runTime: 120
                      genre:
                        - action
                      released: '2021'
                      status: ready
                      is_favorite: false
                    -
                      id: 65
                      name: 'Example Movie 1'
                      posterImage: 'https://example.com/poster1.jpg'
                      previewImage: 'https://example.com/preview1.jpg'
                      backgroundImage: 'https://example.com/background1.jpg'
                      backgroundColor: '#FFFFFF'
                      videoLink: 'https://example.com/video1.mp4'
                      previewVideoLink: 'https://example.com/previewVideo1.mp4'
                      description: 'A great movie about...'
                      rating: '5.50'
                      scoresCount: 2
                      director: 'Director 1'
                      starring:
                        - 'Actor 1'
                        - 'Actor 2'
                      runTime: 120
                      genre:
                        - action
                      released: '2021'
                      status: ready
                      is_favorite: false
                  links:
                    first: '/?page=1'
                    last: '/?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: pagination.previous
                        active: false
                      -
                        url: '/?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: pagination.next
                        active: false
                    path: /
                    per_page: 8
                    to: 2
                    total: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 65
                        name: 'Example Movie 1'
                        posterImage: 'https://example.com/poster1.jpg'
                        previewImage: 'https://example.com/preview1.jpg'
                        backgroundImage: 'https://example.com/background1.jpg'
                        backgroundColor: '#FFFFFF'
                        videoLink: 'https://example.com/video1.mp4'
                        previewVideoLink: 'https://example.com/previewVideo1.mp4'
                        description: 'A great movie about...'
                        rating: '5.50'
                        scoresCount: 2
                        director: 'Director 1'
                        starring:
                          - 'Actor 1'
                          - 'Actor 2'
                        runTime: 120
                        genre:
                          - action
                        released: '2021'
                        status: ready
                        is_favorite: false
                      -
                        id: 65
                        name: 'Example Movie 1'
                        posterImage: 'https://example.com/poster1.jpg'
                        previewImage: 'https://example.com/preview1.jpg'
                        backgroundImage: 'https://example.com/background1.jpg'
                        backgroundColor: '#FFFFFF'
                        videoLink: 'https://example.com/video1.mp4'
                        previewVideoLink: 'https://example.com/previewVideo1.mp4'
                        description: 'A great movie about...'
                        rating: '5.50'
                        scoresCount: 2
                        director: 'Director 1'
                        starring:
                          - 'Actor 1'
                          - 'Actor 2'
                        runTime: 120
                        genre:
                          - action
                        released: '2021'
                        status: ready
                        is_favorite: false
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 65
                        name:
                          type: string
                          example: 'Example Movie 1'
                        posterImage:
                          type: string
                          example: 'https://example.com/poster1.jpg'
                        previewImage:
                          type: string
                          example: 'https://example.com/preview1.jpg'
                        backgroundImage:
                          type: string
                          example: 'https://example.com/background1.jpg'
                        backgroundColor:
                          type: string
                          example: '#FFFFFF'
                        videoLink:
                          type: string
                          example: 'https://example.com/video1.mp4'
                        previewVideoLink:
                          type: string
                          example: 'https://example.com/previewVideo1.mp4'
                        description:
                          type: string
                          example: 'A great movie about...'
                        rating:
                          type: string
                          example: '5.50'
                        scoresCount:
                          type: integer
                          example: 2
                        director:
                          type: string
                          example: 'Director 1'
                        starring:
                          type: array
                          example:
                            - 'Actor 1'
                            - 'Actor 2'
                          items:
                            type: string
                        runTime:
                          type: integer
                          example: 120
                        genre:
                          type: array
                          example:
                            - action
                          items:
                            type: string
                        released:
                          type: string
                          example: '2021'
                        status:
                          type: string
                          example: ready
                        is_favorite:
                          type: boolean
                          example: false
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: '/?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: pagination.previous
                            active: false
                          -
                            url: '/?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: pagination.next
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: pagination.previous
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 8
                      to:
                        type: integer
                        example: 2
                      total:
                        type: integer
                        example: 2
      tags:
        - Film
      security: []
    post:
      summary: 'POST /api/v1/films'
      operationId: pOSTapiv1films
      description: "\n        Добавление фильма в базу. Проставляется статус pending.\n        У фильмов с этим статусом обновляются данные посредством обращения раз в день к данным omdbApi.\n        Выполнять действие может только модератор."
      parameters: []
      responses:
        201:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: 'message: Фильм с imdb_id tt4523465 добавлен в очередь на создание'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет активной сессии'
                properties:
                  error:
                    type: string
                    example: 'Нет активной сессии'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет доступа к дейсвтию!'
                properties:
                  error:
                    type: string
                    example: 'Нет доступа к дейсвтию!'
      tags:
        - Film
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Поле value не может превышать 255 символов.'
                  example: wzibrzeifwcgsqgmtsylmf
                posterImage:
                  type: string
                  description: "Ссылка должна вести на картинку: https://.../image.png;\n        Допустимые расширения расширения задаются в config(\"filesystems.img_extensions\")"
                  example: 'https://img.freepik.com/free-photo/view-of-3d-adorable-cat-with-fluffy-clouds_23-2151113419.jpg'
                previewImage:
                  type: string
                  description: "Ссылка должна вести на картинку: https://.../image.png;\n        Допустимые расширения расширения задаются в config(\"filesystems.img_extensions\")"
                  example: 'https://img.freepik.com/free-photo/view-of-3d-adorable-cat-with-fluffy-clouds_23-2151113419.jpg'
                backgroundImage:
                  type: string
                  description: "Ссылка должна вести на картинку: https://.../image.png;\n        Допустимые расширения расширения задаются в config(\"filesystems.img_extensions\")"
                  example: 'https://img.freepik.com/free-photo/view-of-3d-adorable-cat-with-fluffy-clouds_23-2151113419.jpg'
                backgroundColor:
                  type: string
                  description: ''
                  example: null
                videoLink:
                  type: string
                  description: 'Валидный url адрес'
                  example: 'https://www.youtube.com/watch?v=dQw4w9WgQ'
                previewVideoLink:
                  type: 'Валидный url адрес'
                  description: ''
                  example: 'https://www.youtube.com/watch?v=dQw4w9WgQ'
                description:
                  type: string
                  description: 'Поле value не может превышать 1000 символов.'
                  example: 'Eos commodi voluptatem alias.'
                director:
                  type: string
                  description: 'Поле value не может превышать 255 символов.'
                  example: zwhmdbtnfgxuabg
                starring:
                  type: string
                  description: 'Актеры в фильме. Заполняется в строку, можно заполнять через запятую'
                  example: 'Актер 1, Актер 2'
                runTime:
                  type: integer
                  description: 'Время длительности фильма'
                  example: 140
                genre:
                  type: string
                  description: 'Жанры фильма. Заполняется в строку, жанры можно заполнять через запятую'
                  example: 'комедия, семейный'
                released:
                  type: integer
                  description: 'Год выпуска фильма'
                  example: '2003 или 2003-2005'
                status:
                  type: string
                  description: 'Статусы фильмов'
                  example: moderate
                  enum:
                    - ready
                    - pending
                    - moderate
                imdb_id:
                  type: string
                  description: 'imdbId, который должен соответстовать регулярному выражению: /^tt\d{7,8}$/'
                  example: tt1111111
              required:
                - imdb_id
  '/api/v1/films/{film_id}':
    get:
      summary: 'GET /api/v1/films/{film_id}'
      operationId: gETapiv1filmsfilmId
      description: "\n        Получение фильма по id"
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 65
                    name: 'Example Movie 1'
                    posterImage: 'https://example.com/poster1.jpg'
                    previewImage: 'https://example.com/preview1.jpg'
                    backgroundImage: 'https://example.com/background1.jpg'
                    backgroundColor: '#FFFFFF'
                    videoLink: 'https://example.com/video1.mp4'
                    previewVideoLink: 'https://example.com/previewVideo1.mp4'
                    description: 'A great movie about...'
                    rating: '5.50'
                    scoresCount: 2
                    director: 'Director 1'
                    starring:
                      - 'Actor 1'
                      - 'Actor 2'
                    runTime: 120
                    genre:
                      - action
                    released: '2021'
                    status: ready
                    is_favorite: false
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 65
                      name:
                        type: string
                        example: 'Example Movie 1'
                      posterImage:
                        type: string
                        example: 'https://example.com/poster1.jpg'
                      previewImage:
                        type: string
                        example: 'https://example.com/preview1.jpg'
                      backgroundImage:
                        type: string
                        example: 'https://example.com/background1.jpg'
                      backgroundColor:
                        type: string
                        example: '#FFFFFF'
                      videoLink:
                        type: string
                        example: 'https://example.com/video1.mp4'
                      previewVideoLink:
                        type: string
                        example: 'https://example.com/previewVideo1.mp4'
                      description:
                        type: string
                        example: 'A great movie about...'
                      rating:
                        type: string
                        example: '5.50'
                      scoresCount:
                        type: integer
                        example: 2
                      director:
                        type: string
                        example: 'Director 1'
                      starring:
                        type: array
                        example:
                          - 'Actor 1'
                          - 'Actor 2'
                        items:
                          type: string
                      runTime:
                        type: integer
                        example: 120
                      genre:
                        type: array
                        example:
                          - action
                        items:
                          type: string
                      released:
                        type: string
                        example: '2021'
                      status:
                        type: string
                        example: ready
                      is_favorite:
                        type: boolean
                        example: false
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Запрашиваемая страница не существует'
                properties:
                  error:
                    type: string
                    example: 'Запрашиваемая страница не существует'
      tags:
        - Film
      security: []
    patch:
      summary: 'PATCH /api/v1/films/{film_id}'
      operationId: pATCHapiv1filmsfilmId
      description: "\n        Обновление данных о фильме.\n        Выполнять действие может только модератор"
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 65
                    name: 'Example Movie 1'
                    posterImage: 'https://example.com/poster1.jpg'
                    previewImage: 'https://example.com/preview1.jpg'
                    backgroundImage: 'https://example.com/background1.jpg'
                    backgroundColor: '#FFFFFF'
                    videoLink: 'https://example.com/video1.mp4'
                    previewVideoLink: 'https://example.com/previewVideo1.mp4'
                    description: 'A great movie about...'
                    rating: '5.50'
                    scoresCount: 2
                    director: 'Director 1'
                    starring:
                      - 'Actor 1'
                      - 'Actor 2'
                    runTime: 120
                    genre:
                      - action
                    released: '2021'
                    status: ready
                    is_favorite: false
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 65
                      name:
                        type: string
                        example: 'Example Movie 1'
                      posterImage:
                        type: string
                        example: 'https://example.com/poster1.jpg'
                      previewImage:
                        type: string
                        example: 'https://example.com/preview1.jpg'
                      backgroundImage:
                        type: string
                        example: 'https://example.com/background1.jpg'
                      backgroundColor:
                        type: string
                        example: '#FFFFFF'
                      videoLink:
                        type: string
                        example: 'https://example.com/video1.mp4'
                      previewVideoLink:
                        type: string
                        example: 'https://example.com/previewVideo1.mp4'
                      description:
                        type: string
                        example: 'A great movie about...'
                      rating:
                        type: string
                        example: '5.50'
                      scoresCount:
                        type: integer
                        example: 2
                      director:
                        type: string
                        example: 'Director 1'
                      starring:
                        type: array
                        example:
                          - 'Actor 1'
                          - 'Actor 2'
                        items:
                          type: string
                      runTime:
                        type: integer
                        example: 120
                      genre:
                        type: array
                        example:
                          - action
                        items:
                          type: string
                      released:
                        type: string
                        example: '2021'
                      status:
                        type: string
                        example: ready
                      is_favorite:
                        type: boolean
                        example: false
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет активной сессии'
                properties:
                  error:
                    type: string
                    example: 'Нет активной сессии'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет доступа к дейсвтию!'
                properties:
                  error:
                    type: string
                    example: 'Нет доступа к дейсвтию!'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Запрашиваемая страница не существует'
                properties:
                  error:
                    type: string
                    example: 'Запрашиваемая страница не существует'
      tags:
        - Film
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Поле value не может превышать 255 символов.'
                  example: va
                posterImage:
                  type: string
                  description: "Ссылка должна вести на картинку: https://.../image.png;\n        Допустимые расширения расширения задаются в config(\"filesystems.img_extensions\")"
                  example: 'https://img.freepik.com/free-photo/view-of-3d-adorable-cat-with-fluffy-clouds_23-2151113419.jpg'
                previewImage:
                  type: string
                  description: "Ссылка должна вести на картинку: https://.../image.png;\n        Допустимые расширения расширения задаются в config(\"filesystems.img_extensions\")"
                  example: 'https://img.freepik.com/free-photo/view-of-3d-adorable-cat-with-fluffy-clouds_23-2151113419.jpg'
                backgroundImage:
                  type: string
                  description: "Ссылка должна вести на картинку: https://.../image.png;\n        Допустимые расширения расширения задаются в config(\"filesystems.img_extensions\")"
                  example: 'https://img.freepik.com/free-photo/view-of-3d-adorable-cat-with-fluffy-clouds_23-2151113419.jpg'
                backgroundColor:
                  type: string
                  description: ''
                  example: null
                videoLink:
                  type: string
                  description: 'Валидный url адрес'
                  example: 'https://www.youtube.com/watch?v=dQw4w9WgQ'
                previewVideoLink:
                  type: 'Валидный url адрес'
                  description: ''
                  example: 'https://www.youtube.com/watch?v=dQw4w9WgQ'
                description:
                  type: string
                  description: 'Поле value не может превышать 1000 символов.'
                  example: 'Non doloribus omnis magni et.'
                director:
                  type: string
                  description: Директор
                  example: aliquid
                starring:
                  type: string
                  description: 'Актеры в фильме. Заполняется в строку, можно заполнять через запятую'
                  example: 'Актер 1, Актер 2'
                runTime:
                  type: integer
                  description: 'Время длительности фильма'
                  example: 140
                genre:
                  type: string
                  description: 'Жанры фильма. Заполняется в строку, жанры можно заполнять через запятую'
                  example: 'комедия, семейный'
                released:
                  type: string
                  description: 'Год выпуска фильма'
                  example: '2003 или 2003-2005'
                status:
                  type: string
                  description: 'Статусы фильмов'
                  example: moderate
                  enum:
                    - ready
                    - pending
                    - moderate
                imdb_id:
                  type: string
                  description: 'imdbId, который должен соответстовать регулярному выражению: /^tt\d{7,8}$/'
                  example: tt1111111
              required:
                - imdb_id
    delete:
      summary: 'DELETE api/v1/films/{film_id}'
      operationId: dELETEApiv1filmsfilmId
      description: 'Удаление фильма'
      parameters: []
      responses:
        204:
          description: ''
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет активной сессии'
                properties:
                  error:
                    type: string
                    example: 'Нет активной сессии'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет доступа к дейсвтию!'
                properties:
                  error:
                    type: string
                    example: 'Нет доступа к дейсвтию!'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Запрашиваемая страница не существует'
                properties:
                  error:
                    type: string
                    example: 'Запрашиваемая страница не существует'
      tags:
        - Film
    parameters:
      -
        in: path
        name: film_id
        description: 'ID фильма'
        example: 65
        required: true
        schema:
          type: integer
  '/api/v1/films/{film_id}/similar':
    get:
      summary: 'GET /api/v1/films/{film_id}/similar'
      operationId: gETapiv1filmsfilmIdsimilar
      description: "\n        Поиск похожих фильмов по жанрам. Вывод массива фильмов, у которых хоть 1 жанр совпадает.\n        Выводится 4 похожих фильма (по умолчанию).\n        Изменить значение можно в конфиге приложения: config('app.api.similar.limit')"
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 65
                      name: 'Example Movie 1'
                      posterImage: 'https://example.com/poster1.jpg'
                      previewImage: 'https://example.com/preview1.jpg'
                      backgroundImage: 'https://example.com/background1.jpg'
                      backgroundColor: '#FFFFFF'
                      videoLink: 'https://example.com/video1.mp4'
                      previewVideoLink: 'https://example.com/previewVideo1.mp4'
                      description: 'A great movie about...'
                      rating: '5.50'
                      scoresCount: 2
                      director: 'Director 1'
                      starring:
                        - 'Actor 1'
                        - 'Actor 2'
                      runTime: 120
                      genre:
                        - action
                      released: '2021'
                      status: ready
                      is_favorite: false
                    -
                      id: 65
                      name: 'Example Movie 1'
                      posterImage: 'https://example.com/poster1.jpg'
                      previewImage: 'https://example.com/preview1.jpg'
                      backgroundImage: 'https://example.com/background1.jpg'
                      backgroundColor: '#FFFFFF'
                      videoLink: 'https://example.com/video1.mp4'
                      previewVideoLink: 'https://example.com/previewVideo1.mp4'
                      description: 'A great movie about...'
                      rating: '5.50'
                      scoresCount: 2
                      director: 'Director 1'
                      starring:
                        - 'Actor 1'
                        - 'Actor 2'
                      runTime: 120
                      genre:
                        - action
                      released: '2021'
                      status: ready
                      is_favorite: false
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 65
                        name: 'Example Movie 1'
                        posterImage: 'https://example.com/poster1.jpg'
                        previewImage: 'https://example.com/preview1.jpg'
                        backgroundImage: 'https://example.com/background1.jpg'
                        backgroundColor: '#FFFFFF'
                        videoLink: 'https://example.com/video1.mp4'
                        previewVideoLink: 'https://example.com/previewVideo1.mp4'
                        description: 'A great movie about...'
                        rating: '5.50'
                        scoresCount: 2
                        director: 'Director 1'
                        starring:
                          - 'Actor 1'
                          - 'Actor 2'
                        runTime: 120
                        genre:
                          - action
                        released: '2021'
                        status: ready
                        is_favorite: false
                      -
                        id: 65
                        name: 'Example Movie 1'
                        posterImage: 'https://example.com/poster1.jpg'
                        previewImage: 'https://example.com/preview1.jpg'
                        backgroundImage: 'https://example.com/background1.jpg'
                        backgroundColor: '#FFFFFF'
                        videoLink: 'https://example.com/video1.mp4'
                        previewVideoLink: 'https://example.com/previewVideo1.mp4'
                        description: 'A great movie about...'
                        rating: '5.50'
                        scoresCount: 2
                        director: 'Director 1'
                        starring:
                          - 'Actor 1'
                          - 'Actor 2'
                        runTime: 120
                        genre:
                          - action
                        released: '2021'
                        status: ready
                        is_favorite: false
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 65
                        name:
                          type: string
                          example: 'Example Movie 1'
                        posterImage:
                          type: string
                          example: 'https://example.com/poster1.jpg'
                        previewImage:
                          type: string
                          example: 'https://example.com/preview1.jpg'
                        backgroundImage:
                          type: string
                          example: 'https://example.com/background1.jpg'
                        backgroundColor:
                          type: string
                          example: '#FFFFFF'
                        videoLink:
                          type: string
                          example: 'https://example.com/video1.mp4'
                        previewVideoLink:
                          type: string
                          example: 'https://example.com/previewVideo1.mp4'
                        description:
                          type: string
                          example: 'A great movie about...'
                        rating:
                          type: string
                          example: '5.50'
                        scoresCount:
                          type: integer
                          example: 2
                        director:
                          type: string
                          example: 'Director 1'
                        starring:
                          type: array
                          example:
                            - 'Actor 1'
                            - 'Actor 2'
                          items:
                            type: string
                        runTime:
                          type: integer
                          example: 120
                        genre:
                          type: array
                          example:
                            - action
                          items:
                            type: string
                        released:
                          type: string
                          example: '2021'
                        status:
                          type: string
                          example: ready
                        is_favorite:
                          type: boolean
                          example: false
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Запрашиваемая страница не существует'
                properties:
                  error:
                    type: string
                    example: 'Запрашиваемая страница не существует'
      tags:
        - Film
      security: []
    parameters:
      -
        in: path
        name: film_id
        description: 'ID фильма'
        example: 65
        required: true
        schema:
          type: integer
  /api/v1/genres:
    post:
      summary: ''
      operationId: postApiV1Genres
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    name: Драма
                  message: 'Жанр добавлен в список'
                properties:
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Драма
                  message:
                    type: string
                    example: 'Жанр добавлен в список'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет активной сессии'
                properties:
                  error:
                    type: string
                    example: 'Нет активной сессии'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет доступа к дейсвтию!'
                properties:
                  error:
                    type: string
                    example: 'Нет доступа к дейсвтию!'
      tags:
        - Genre
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Поле value не может превышать 32 символов.'
                  example: id
              required:
                - name
    get:
      summary: ''
      operationId: getApiV1Genres
      description: ''
      parameters:
        -
          in: query
          name: orderTo
          description: 'Направление сортировки по атрибуту name'
          example: asc
          required: false
          schema:
            type: string
            description: 'Направление сортировки по атрибуту name'
            example: asc
            enum:
              - asc
              - desc
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      name: Драма
                    -
                      name: Драма
                properties:
                  data:
                    type: array
                    example:
                      -
                        name: Драма
                      -
                        name: Драма
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Драма
      tags:
        - Genre
      security: []
  '/api/v1/genres/{genre_id}':
    put:
      summary: 'PATCH api/v1/genres/{genre_id}'
      operationId: pATCHApiv1genresgenreId
      description: 'Обновление жанра'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    name: Драма
                properties:
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Драма
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет активной сессии'
                properties:
                  error:
                    type: string
                    example: 'Нет активной сессии'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет доступа к дейсвтию!'
                properties:
                  error:
                    type: string
                    example: 'Нет доступа к дейсвтию!'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Запрашиваемая страница не существует'
                properties:
                  error:
                    type: string
                    example: 'Запрашиваемая страница не существует'
      tags:
        - Genre
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Поле value не может превышать 32 символов.'
                  example: lvjzuiskwaradvwgzmvvsdja
              required:
                - name
    delete:
      summary: 'DELETE api/v1/genres/{genre_id}'
      operationId: dELETEApiv1genresgenreId
      description: 'Удаление жанра'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет активной сессии'
                properties:
                  error:
                    type: string
                    example: 'Нет активной сессии'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет доступа к дейсвтию!'
                properties:
                  error:
                    type: string
                    example: 'Нет доступа к дейсвтию!'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Запрашиваемая страница не существует'
                properties:
                  error:
                    type: string
                    example: 'Запрашиваемая страница не существует'
      tags:
        - Genre
    parameters:
      -
        in: path
        name: genre_id
        description: 'Id жанра'
        example: 4
        required: true
        schema:
          type: integer
  /api/v1/promo:
    get:
      summary: 'GET /api/v1/promo'
      operationId: gETapiv1promo
      description: 'Получение списка всех промо фильмов'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 5
                    film:
                      id: 65
                      name: 'Example Movie 1'
                      posterImage: 'https://example.com/poster1.jpg'
                      previewImage: 'https://example.com/preview1.jpg'
                      backgroundImage: 'https://example.com/background1.jpg'
                      backgroundColor: '#FFFFFF'
                      videoLink: 'https://example.com/video1.mp4'
                      previewVideoLink: 'https://example.com/previewVideo1.mp4'
                      description: 'A great movie about...'
                      rating: '9.00'
                      scoresCount: 2
                      director: 'Director 1'
                      starring:
                        - 'Actor 1'
                        - 'Actor 2'
                      runTime: 120
                      genre:
                        - action
                      released: 2021
                      status: ready
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 5
                      film:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 65
                          name:
                            type: string
                            example: 'Example Movie 1'
                          posterImage:
                            type: string
                            example: 'https://example.com/poster1.jpg'
                          previewImage:
                            type: string
                            example: 'https://example.com/preview1.jpg'
                          backgroundImage:
                            type: string
                            example: 'https://example.com/background1.jpg'
                          backgroundColor:
                            type: string
                            example: '#FFFFFF'
                          videoLink:
                            type: string
                            example: 'https://example.com/video1.mp4'
                          previewVideoLink:
                            type: string
                            example: 'https://example.com/previewVideo1.mp4'
                          description:
                            type: string
                            example: 'A great movie about...'
                          rating:
                            type: string
                            example: '9.00'
                          scoresCount:
                            type: integer
                            example: 2
                          director:
                            type: string
                            example: 'Director 1'
                          starring:
                            type: array
                            example:
                              - 'Actor 1'
                              - 'Actor 2'
                            items:
                              type: string
                          runTime:
                            type: integer
                            example: 120
                          genre:
                            type: array
                            example:
                              - action
                            items:
                              type: string
                          released:
                            type: integer
                            example: 2021
                          status:
                            type: string
                            example: ready
      tags:
        - Promo
      security: []
  '/api/v1/promo/{film_id}':
    post:
      summary: 'POST /api/v1/promo/{film_id}'
      operationId: pOSTapiv1promofilmId
      description: 'Установка фильма как промо'
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Фильм с id 65 установлен как промо-фильм'
                properties:
                  message:
                    type: string
                    example: 'Фильм с id 65 установлен как промо-фильм'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет активной сессии'
                properties:
                  error:
                    type: string
                    example: 'Нет активной сессии'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет доступа к дейсвтию!'
                properties:
                  error:
                    type: string
                    example: 'Нет доступа к дейсвтию!'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Запрашиваемая страница не существует'
                properties:
                  error:
                    type: string
                    example: 'Запрашиваемая страница не существует'
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Фильм с id 65 уже установлен как промо-фильм'
                properties:
                  error:
                    type: string
                    example: 'Фильм с id 65 уже установлен как промо-фильм'
      tags:
        - Promo
    delete:
      summary: 'DELETE /api/v1/promo/{film_id}'
      operationId: dELETEapiv1promofilmId
      description: 'Удаление фильма из списка промо фильмов'
      parameters: []
      responses:
        204:
          description: ''
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет активной сессии'
                properties:
                  error:
                    type: string
                    example: 'Нет активной сессии'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет доступа к дейсвтию!'
                properties:
                  error:
                    type: string
                    example: 'Нет доступа к дейсвтию!'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Запрашиваемая страница не существует'
                properties:
                  error:
                    type: string
                    example: 'Запрашиваемая страница не существует'
      tags:
        - Promo
    parameters:
      -
        in: path
        name: film_id
        description: 'The ID of the film.'
        example: 65
        required: true
        schema:
          type: integer
  /api/v1/user:
    get:
      summary: ''
      operationId: getApiV1User
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: guest@guest.com
                    email: guest@guest.com
                    file: uploads/avatar_66f02fc2ae648.png
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: guest@guest.com
                      email:
                        type: string
                        example: guest@guest.com
                      file:
                        type: string
                        example: uploads/avatar_66f02fc2ae648.png
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет активной сессии'
                properties:
                  error:
                    type: string
                    example: 'Нет активной сессии'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет доступа к дейсвтию!'
                properties:
                  error:
                    type: string
                    example: 'Нет доступа к дейсвтию!'
      tags:
        - User
    patch:
      summary: ''
      operationId: patchApiV1User
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Ваш профиль был обновлен'
                  data:
                    id: 1
                    name: guest@guest.com
                    email: guest@guest.com
                    file: uploads/avatar_66f02fc2ae648.png
                properties:
                  message:
                    type: string
                    example: 'Ваш профиль был обновлен'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: guest@guest.com
                      email:
                        type: string
                        example: guest@guest.com
                      file:
                        type: string
                        example: uploads/avatar_66f02fc2ae648.png
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет активной сессии'
                properties:
                  error:
                    type: string
                    example: 'Нет активной сессии'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Нет доступа к дейсвтию!'
                properties:
                  error:
                    type: string
                    example: 'Нет доступа к дейсвтию!'
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Поле value не может превышать 255 символов.'
                  example: aovpgecegeknlpukf
                email:
                  type: string
                  description: 'Поле value должно быть действительным адресом электронной почты. Поле value не может превышать 255 символов.'
                  example: carmstrong@example.com
                password:
                  type: string
                  description: 'Поле value должно быть длиной минимум 8 символов.'
                  example: '@gS,U\xX&'
                file:
                  type: string
                  format: binary
                  description: 'Поле value поддерживает только изображения Поле value не может превышать 10240 килобайт.'
  /api/v1:
    get:
      summary: ''
      operationId: getApiV1
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Welcome to API what-to-watch'
                properties:
                  message:
                    type: string
                    example: 'Welcome to API what-to-watch'
      tags:
        - Others
      security: []
tags:
  -
    name: Authentication
    description: ''
  -
    name: Comment
    description: "Пользователь может оставлять отзывы к фильмам и отвечать на другие комментарии.\nАдминистратор может удалять, обновлять комментарии. Удалить можно только те, на которых нет ответов.\nРейтинг фильмов рассчитывается исходя из оставленных оценок в отзывах.\nЕжедневно комментарии к фильмам загружаются с сервиса кинопоиск."
  -
    name: 'Favorite list'
    description: 'Список избранных фильмов'
  -
    name: Film
    description: "Эндпоинты для работой с фильмами, редактировать фильмы могут только модераторы.\nУ фильмов есть три статуса:\n- со статусом Film::STATUS_READY доступны пользователям,\n- со статусом Film::STATUS_PENDING, который устанавлвиается при добавлении фильма,\n  обновляются данными из omdbApi\n- со статусом Film::STATUS_MODERATE редактируются модераторами"
  -
    name: Genre
    description: 'Получение списка жанров и управление списком жанров модератором'
  -
    name: Promo
    description: 'Промо фильмы сервиса. Регулируется администратором'
  -
    name: User
    description: 'Просмотр и обновление профиля пользователя'
  -
    name: Others
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: null
security:
  -
    default: []
